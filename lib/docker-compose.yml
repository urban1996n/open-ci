version: "3"
volumes:
# Create a shared volume for apache and node containes to share assets
  _assets:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/public/build

services:
  php:
    container_name: exec
    build:
      context: ./Docker/php
      args:
        REDIS_PASSWORD: "$REDIS_PASSWORD"
        RABBITMQ_USER: "$RABBITMQ_DEFAULT_USER"
        RABBITMQ_PASSWORD: "$RABBITMQ_DEFAULT_PASS"
        RUNNERS_COUNT: "$RUNNERS_COUNT"
    depends_on:
      - rabbitmq
      - redis
    networks:
      - exec_internal
      - proxy
    volumes:
      - .:/var/app
    restart: always

  apache:
    container_name: listener
    build:
      context: ./Docker/apache2
      args:
        CALLBACK_ENDPOINT: "$CALLBACK_ENDPOINT"
        MAIN_SERVERNAME: "$MAIN_SERVERNAME"
    ports:
      - 443:443
    depends_on:
      - php
    networks:
      - proxy
      - assets
    restart: always
    ## Use readonly volume of the _assets volume
    volumes:
      - _assets:/var/app/public/build:ro

  node:
    image: node:14.15.4-alpine3.12
    container_name: node
    networks:
      - assets
    restart: always
    volumes:
        - _assets:/var/app/public/build

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: "$RABBITMQ_DEFAULT_USER"
      RABBITMQ_DEFAULT_PASS: "$RABBITMQ_DEFAULT_PASS"
    container_name: rabbitmq
    networks:
      - exec_internal
    restart: always

  redis:
    container_name: redis_server
    build:
      context: ./Docker/redis
      args:
        REDIS_PASSWORD: "$REDIS_PASSWORD"
    ports:
      - 6379:6379
    networks:
      - exec_internal
    volumes:
      - ./Docker/redis/data:/data
    restart: always

networks:
  exec_internal:
  proxy:
  assets:
